# Generated by Django 5.1.2 on 2025-01-17 07:23

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_developer', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(help_text="Organization's primary email address", max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('username', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('max_students', models.PositiveIntegerField(default=100, help_text='Maximum number of students allowed', validators=[django.core.validators.MinValueValidator(1)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('developer', models.ForeignKey(limit_choices_to={'is_developer': True}, on_delete=django.db.models.deletion.CASCADE, related_name='organizations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='user_management.organization')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('student_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='user_management.batch')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='user_management.organization')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='user_manage_email_40c00d_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_active'], name='user_manage_is_acti_2e8597_idx'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['name'], name='user_manage_name_86ae46_idx'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['email'], name='user_manage_email_4c9bee_idx'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['is_active'], name='user_manage_is_acti_0fa37c_idx'),
        ),
        migrations.AddIndex(
            model_name='batch',
            index=models.Index(fields=['name'], name='user_manage_name_8aeda8_idx'),
        ),
        migrations.AddIndex(
            model_name='batch',
            index=models.Index(fields=['is_active'], name='user_manage_is_acti_960583_idx'),
        ),
        migrations.AddIndex(
            model_name='batch',
            index=models.Index(fields=['organization'], name='user_manage_organiz_39c2db_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='batch',
            unique_together={('name', 'organization')},
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['first_name', 'last_name'], name='user_manage_first_n_ea6149_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['student_id'], name='user_manage_student_472107_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['is_active'], name='user_manage_is_acti_9405a5_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['organization'], name='user_manage_organiz_1add0c_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['batch'], name='user_manage_batch_i_181e28_idx'),
        ),
    ]
